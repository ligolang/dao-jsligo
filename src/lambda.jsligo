#import "./config.jsligo" "Config"
#import "./errors.jsligo" "Errors"

export type parameterChange = (n: unit) => Config.t
export type operationList = (n: unit) => list<operation>;

export type t =
    | ["ParameterChange", parameterChange]
    | ["OperationList", operationList];

export const unpack = (hashOpt: option<bytes>, packed: bytes): t => {
    return match(hashOpt) {
        when(None()) : failwith(Errors.hashNotFound);
        when(Some(hash_)) : do {
            assert_with_error(
                hash_ == Crypto.sha256(packed),
                Errors.hashNotMatch
            );

            return match((Bytes.unpack(packed) as option<t>)) {
                when(None()) : failwith(Errors.unpackMismatch);
                when(Some(lambda_)) : lambda_;
            };
        };
    };
};
