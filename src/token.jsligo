#import "@ligo/fa/lib/fa2/asset/single_asset.impl.jsligo" "FA2"

#import "@ligo/fa/lib/fa2/common/tzip12.datatypes.jsligo" "TZIP12"

#import "./errors.jsligo" "Errors"

export type t = address;

export type fa2TransferContract = contract<TZIP12.transfer>;

export const getTransferEntrypoint = (addr: address): fa2TransferContract => {
    const transferOption: option<fa2TransferContract> =
        Tezos.get_entrypoint_opt("%transfer", addr);
    return match(transferOption) {
        when (None()):
            failwith(Errors.receiverNotFound)
        when (Some(c)):
            c
    };
};

export const transfer = (
    [token_addr, from_, to_, amount_]: [t, address, address, nat]
): operation => {
    const dest = getTransferEntrypoint(token_addr);
    const transfer_requests: TZIP12.transfer =
        list(
            [
                {
                    from_: from_,
                    txs: list(
                        [{ to_: to_, amount: amount_, token_id: 0 as nat }]
                    )
                }
            ]
        );
    return Tezos.transaction(transfer_requests, (0 as tez), dest)
};

export const getTotalSupply = (token_addr: t): option<nat> =>
    Tezos.call_view("total_supply", unit, token_addr)
